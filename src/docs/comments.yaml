paths:
  /posts/{postId}/comments:
    get:
      tags:
        - Comments
      summary: Get all comments of a post
      produces:
        - application/json
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/definitions/Comments'
    post:
      security:
        - jwt: []
      tags:
        - Comments
      summary: Create a new comment in a post
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Post created by a registered user
          schema:
            type: object
            properties:
              post_id:
                type: integer
              comment:
                type: string
              draft:
                type: boolean
      responses:
        201:
          description: The created comment object
          content:
            application/json:
              schema:
                $ref: '#/definitions/Comment'
        400:
          description: Invalid input

  /posts/{postId}/comments/{commentId}:
    put:
      security:
        - jwt: []
      tags:
        - Comments
      summary: Update an existing comment by Id
      produces:
        - application/json
      parameters:
        - name: postId
          in: path
          type: string
        - name: commentId
          in: path
          type: string
        - in: body
          name: body
          description: It enables update an existent comment in a post
          schema:
            type: object
            properties:
              comment:
                type: string
              draft:
                type: boolean
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/definitions/Comment'
        400:
          description: Invalid input

  /accounts/{accountId}/posts/{postId}/comments/{commentId}:
    delete:
      security:
        - jwt: []
      tags:
        - Comments
      summary: Delete a comment as a moderator
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description:
          required: true
          type: string
      responses:
        201:
          description: An object with a user updated user profile detail
        401:
          description: Unauthorized users

  /accounts/me/posts/{postId}/comments/{commentId}:
    delete:
      security:
        - jwt: []
      tags:
        - Comments
      summary: Delete a personal comment
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description:
          required: true
          type: string
      responses:
        201:
          description: An object with a user updated user profile detail
        401:
          description: Unauthorized users

definitions:
  Comment:
    type: 'object'
    properties:
      id:
        type: integer
        format: int64
      post_id:
        type: integer
      user_id:
        type: integer
      comment:
        type: string
      likes:
        type: integer
      dislikes:
        type: integer
  Comments:
    type: array
    items:
      $ref: '#/definitions/Comment'
